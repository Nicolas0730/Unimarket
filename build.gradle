plugins {
    id 'org.springframework.boot' version '3.0.1'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'java'
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

group 'co.edu.uniquindio.proyecto'
version '1.0-SNAPSHOT'
description 'Breve descripción del proyecto'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    /**
     * La primer dependencia (spring-boot-starter-data-jpa) nos permite usar unas anotaciones
     para modelar fácilmente nuestros objetos de dominio. Esta dependencia se centra en facilitar al
     desarrollador la definición de la persistencia del proyecto empresarial.
     La segunda dependencia (mysql-connector-java) es el driver de conexión con el sistema de
     gestión de base de datos, que para nuestro caso es MySQL.
     */
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//    runtimeOnly 'mysql:mysql-connector-java'
    runtimeOnly 'org.postgresql:postgresql'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    //Se agregaron porque no se reconocía jakarta en la clase JwtAuthenticationFilter
    implementation 'jakarta.platform:jakarta.jakartaee-api:9.1.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.5'
    implementation 'com.cloudinary:cloudinary-http44:1.33.0'

    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
}

//test {
//    useJUnitPlatform()
//}